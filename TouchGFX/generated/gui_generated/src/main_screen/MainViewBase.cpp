/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/main_screen/MainViewBase.hpp>
#include <touchgfx/canvas_widget_renderer/CanvasWidgetRenderer.hpp>
#include <touchgfx/Color.hpp>
#include <texts/TextKeysAndLanguages.hpp>

MainViewBase::MainViewBase()
{
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
    
    __background.setPosition(0, 0, 800, 480);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    box1.setPosition(0, 0, 800, 480);
    box1.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(box1);

    textArea1.setXY(436, 48);
    textArea1.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textArea1.setLinespacing(0);
    Unicode::snprintf(textArea1Buffer, TEXTAREA1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_Y2ZU).getText());
    textArea1.setWildcard(textArea1Buffer);
    textArea1.resizeToCurrentText();
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_VE94));
    add(textArea1);

    soc_val.setXY(205, 48);
    soc_val.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    soc_val.setLinespacing(0);
    Unicode::snprintf(soc_valBuffer, SOC_VAL_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_0GBC).getText());
    soc_val.setWildcard(soc_valBuffer);
    soc_val.resizeToCurrentText();
    soc_val.setTypedText(touchgfx::TypedText(T___SINGLEUSE_FRL3));
    add(soc_val);

    mission_val.setXY(149, 300);
    mission_val.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    mission_val.setLinespacing(0);
    Unicode::snprintf(mission_valBuffer, MISSION_VAL_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_ID81).getText());
    mission_val.setWildcard(mission_valBuffer);
    mission_val.resizeToCurrentText();
    mission_val.setTypedText(touchgfx::TypedText(T___SINGLEUSE_0L9Y));
    add(mission_val);

    sdc_val.setXY(425, 300);
    sdc_val.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    sdc_val.setLinespacing(0);
    Unicode::snprintf(sdc_valBuffer, SDC_VAL_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_3FEA).getText());
    sdc_val.setWildcard(sdc_valBuffer);
    sdc_val.resizeToCurrentText();
    sdc_val.setTypedText(touchgfx::TypedText(T___SINGLEUSE_LDZ4));
    add(sdc_val);

    sdc_light_border.setPosition(712, 293, 88, 88);
    sdc_light_border.setCenter(44, 44);
    sdc_light_border.setRadius(24);
    sdc_light_border.setLineWidth(0);
    sdc_light_border.setArc(0, 360);
    sdc_light_borderPainter.setColor(touchgfx::Color::getColorFromRGB(158, 158, 158));
    sdc_light_border.setPainter(sdc_light_borderPainter);
    add(sdc_light_border);

    sdc_light.setPosition(716, 297, 80, 80);
    sdc_light.setCenter(40, 40);
    sdc_light.setRadius(20);
    sdc_light.setLineWidth(0);
    sdc_light.setArc(0, 360);
    sdc_lightPainter.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    sdc_light.setPainter(sdc_lightPainter);
    add(sdc_light);

    line1.setPosition(266, 0, 10, 480);
    line1Painter.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    line1.setPainter(line1Painter);
    line1.setStart(5, 0);
    line1.setEnd(5, 480);
    line1.setLineWidth(1);
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
    add(line1);

    line1_1.setPosition(532, 0, 10, 480);
    line1_1Painter.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    line1_1.setPainter(line1_1Painter);
    line1_1.setStart(5, 0);
    line1_1.setEnd(5, 480);
    line1_1.setLineWidth(1);
    line1_1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
    add(line1_1);

    main_box.setPosition(0, 380, 200, 100);
    main_box.setColor(touchgfx::Color::getColorFromRGB(255, 104, 1));
    add(main_box);

    mission_box.setPosition(200, 380, 200, 100);
    mission_box.setColor(touchgfx::Color::getColorFromRGB(255, 104, 1));
    add(mission_box);

    params_box.setPosition(400, 380, 200, 100);
    params_box.setColor(touchgfx::Color::getColorFromRGB(255, 104, 1));
    add(params_box);

    dv_box.setPosition(600, 380, 200, 100);
    dv_box.setColor(touchgfx::Color::getColorFromRGB(255, 104, 1));
    add(dv_box);

    mission_label.setXY(216, 252);
    mission_label.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    mission_label.setLinespacing(0);
    mission_label.setTypedText(touchgfx::TypedText(T___SINGLEUSE_N0GM));
    add(mission_label);

    soc_label.setXY(241, 0);
    soc_label.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    soc_label.setLinespacing(0);
    soc_label.setTypedText(touchgfx::TypedText(T___SINGLEUSE_WO5H));
    add(soc_label);

    sdc_label.setXY(505, 252);
    sdc_label.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    sdc_label.setLinespacing(0);
    sdc_label.setTypedText(touchgfx::TypedText(T___SINGLEUSE_4ODG));
    add(sdc_label);

    power_label.setXY(226, 126);
    power_label.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    power_label.setLinespacing(0);
    power_label.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SAFW));
    add(power_label);

    battemp_label.setXY(466, 0);
    battemp_label.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    battemp_label.setLinespacing(0);
    battemp_label.setTypedText(touchgfx::TypedText(T___SINGLEUSE_R5CT));
    add(battemp_label);

    speedlim_label.setXY(457, 126);
    speedlim_label.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    speedlim_label.setLinespacing(0);
    speedlim_label.setTypedText(touchgfx::TypedText(T___SINGLEUSE_3YVU));
    add(speedlim_label);

    main_menu_label.setXY(53, 406);
    main_menu_label.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    main_menu_label.setLinespacing(0);
    main_menu_label.setTypedText(touchgfx::TypedText(T___SINGLEUSE_VLJ8));
    add(main_menu_label);

    mission_menu_label.setXY(227, 406);
    mission_menu_label.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    mission_menu_label.setLinespacing(0);
    mission_menu_label.setTypedText(touchgfx::TypedText(T___SINGLEUSE_4YLB));
    add(mission_menu_label);

    params_menu_label.setXY(427, 406);
    params_menu_label.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    params_menu_label.setLinespacing(0);
    params_menu_label.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Q789));
    add(params_menu_label);

    dv_menu_label.setXY(671, 406);
    dv_menu_label.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    dv_menu_label.setLinespacing(0);
    dv_menu_label.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SGUD));
    add(dv_menu_label);

    upper_divider.setPosition(0, 380, 800, 8);
    upper_dividerPainter.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    upper_divider.setPainter(upper_dividerPainter);
    upper_divider.setStart(0, 0);
    upper_divider.setEnd(800, 0);
    upper_divider.setLineWidth(8);
    upper_divider.setLineEndingStyle(touchgfx::Line::BUTT_CAP_ENDING);
    add(upper_divider);

    lower_divider.setPosition(0, 476, 800, 8);
    lower_dividerPainter.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    lower_divider.setPainter(lower_dividerPainter);
    lower_divider.setStart(0, 0);
    lower_divider.setEnd(800, 0);
    lower_divider.setLineWidth(8);
    lower_divider.setLineEndingStyle(touchgfx::Line::BUTT_CAP_ENDING);
    add(lower_divider);

    left_divider.setPosition(0, 380, 8, 100);
    left_dividerPainter.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    left_divider.setPainter(left_dividerPainter);
    left_divider.setStart(0, 0);
    left_divider.setEnd(0, 100);
    left_divider.setLineWidth(8);
    left_divider.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
    add(left_divider);

    middle_left_divider.setPosition(198, 380, 8, 100);
    middle_left_dividerPainter.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    middle_left_divider.setPainter(middle_left_dividerPainter);
    middle_left_divider.setStart(0, 0);
    middle_left_divider.setEnd(0, 100);
    middle_left_divider.setLineWidth(8);
    middle_left_divider.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
    add(middle_left_divider);

    middle_divider.setPosition(398, 380, 8, 100);
    middle_dividerPainter.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    middle_divider.setPainter(middle_dividerPainter);
    middle_divider.setStart(0, 0);
    middle_divider.setEnd(0, 100);
    middle_divider.setLineWidth(8);
    middle_divider.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
    add(middle_divider);

    middle_right_divider.setPosition(598, 380, 8, 100);
    middle_right_dividerPainter.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    middle_right_divider.setPainter(middle_right_dividerPainter);
    middle_right_divider.setStart(0, 0);
    middle_right_divider.setEnd(0, 100);
    middle_right_divider.setLineWidth(8);
    middle_right_divider.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
    add(middle_right_divider);

    right_divider.setPosition(796, 380, 8, 100);
    right_dividerPainter.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    right_divider.setPainter(right_dividerPainter);
    right_divider.setStart(0, 0);
    right_divider.setEnd(0, 100);
    right_divider.setLineWidth(8);
    right_divider.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
    add(right_divider);
}

MainViewBase::~MainViewBase()
{
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void MainViewBase::setupScreen()
{

}
